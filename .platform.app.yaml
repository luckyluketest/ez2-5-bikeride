# eZ Launchpad - Platform.sh file boilerplate - ez-2.x

# This file describes an application. You can have multiple applications
# in the same project.

# Please see doc/platformsh/README.md and doc/platformsh/INSTALL.md
# NB: Clustered eZ Platform setups are not tested and are likely to have issues.

# The name of this app. Must be unique within a project.
name: app

dependencies:
    nodejs:
      yarn: "*"

# The type of the application to build.
type: php:7.3
build:
    # "none" means we're running composer manually, see build hook
    flavor: "none"

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: "mysqldb:user"
    rediscache: "rediscache:redis"
    redissession: 'redissession:redis'

# The configuration of app when it is exposed to the web.
web:
    locations:
        "/":
            # The public directory of the app, relative to its root.
            root: "ezplatform/web"
            # The front-controller script to send non-static requests to.
            passthru: "/app.php"
            # The number of seconds whitelisted (static) content should be cache
            expires: 600
            rules:
                # Disable .php(3) and other executable extensions in the var directory
                '^/var/.*(?i)\.(php3?|phar|phtml|sh|exe|pl|bin)$':
                    allow: false

# The size of the persistent disk of the application (in MB).
disk: 3072

# The mounts that will be performed when the package is deployed.
mounts:
# see https://github.com/ezsystems/ezplatform/blob/master/.platform.app.yaml 
# to fix?
# Support to make sure at least cache + logs are local, while you can let web/var be shared if you prefer that over DFS.
    'ezplatform/var/cache':
        source: local
        source_path: cache
    'ezplatform/var/logs':
        source: local
        source_path: logs
    'ezplatform/var/encore':
        source: local
        source_path: encore
    'ezplatform/web/var':
        source: local
        source_path: var
    # To be prepared to move to cluster, please rather use e.g. persisted Redis instance.
    'ezplatform/web/sessions':
        source: local
        source_path: sessions

# The hooks that will be performed when the package is deployed.
hooks:
    build: |
        set -e

        # Install newer version of Node.js, as current default (v6LTS) does not play well with WebpackEncore
        unset NPM_CONFIG_PREFIX
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | dash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm current
        nvm install 10.15.3

        cd ezplatform
        composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader
        rm web/app_dev.php
        # php -d memory_limit=-1 -d max_execution_time=3600 bin/console assetic:dump

    deploy: |
        set -e

        unset NPM_CONFIG_PREFIX
        command -v nvm && nvm use 10.15.3

        if [ ! -f ezplatform/web/var/.platform.installed ]; then
            MYSQL_OPTIONS=`php provisioning/platformsh/getmysqlcredentials.php`
            zcat data/ezplatform.sql.gz | mysql $MYSQL_OPTIONS
            tar xvzf data/storage.tar.gz -C ezplatform/web/
            touch ezplatform/web/var/.platform.installed
        fi
        cd ezplatform
        rm -Rf var/cache/$SYMFONY_ENV
        bin/console cache:pool:clear cache.redis
        bin/console cache:clear

crons:
    minute:
        # NOTE: Platform.sh PS does not execute every minute, so might sometimes miss jobs scheduled for a given time
        spec: "* * * * *"
        cmd: "php bin/console ezplatform:cron:run"
    weekly:
        spec: "0 0 * * 0"
        cmd: "php bin/console ezplatform:check-urls"


runtime:
    extensions:
        - xsl
        - imagick
        - readline
        - msgpack
        - redis
        #- apcu
        #- name: 'blackfire'
        #  configuration:
        #      server_id: 'xxxx-xxx-xxx-xxx-xxxx'
        #      server_token: 'xxxx'

variables:
    php:
        memory_limit: 256M
    env:
        # For enterprise cluster, disable Symfony Proxy & instead use Fastly Bundle available on eZ Platform Enterprise
        #SYMFONY_HTTP_CACHE: 0
        # Change this to dev if you want to run site & commands in dev
        SYMFONY_ENV: prod
        # Uncomment if you want to use DFS clustering:
        #PLATFORMSH_DFS_NFS_PATH: 'dfsdata'
